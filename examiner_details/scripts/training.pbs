#!/bin/bash

#PBS -N training
#PBS -l walltime=24:00:00
#PBS -l ncpus=16
#PBS -l mem=64GB
#PBS -q bix
#PBS -M 25543350@sun.ac.za
#PBS -m abe
#PBS -o /home/25543350/autoencoder1/scripts/unformatted_logs/
#PBS -e /home/25543350/autoencoder1/scripts/unformatted_logs/

timestamp=$(date +%Y%m%d_%H%M%S)
FEATURES_DIR="/home/25543350/autoencoder1/features/20241011_163941"
LOG_DIR="/home/25543350/autoencoder1/logs/training/${timestamp}"
TRAINING_OUTPUT_DIR="/home/25543350/autoencoder1/models/${timestamp}/training_results"
CHAIN_LIST="${FEATURES_DIR}/chain_list.txt"
TEST_CHAIN_LIST="${FEATURES_DIR}/test_chain_list.txt"
CENTRAL_LOG="/home/25543350/autoencoder1/logs/training/timestamps.log"
start_time=$(date)

TRAINED_MODEL="${TRAINING_OUTPUT_DIR}/trained_model.pth"
TEST_OUTPUT_DIR="/home/25543350/autoencoder1/models/${timestamp}/test_inference_results"

SEQPREDNN_PREDICT_PATH="/home/25543350/SeqPredNN/SeqPredNN/predict.py"
RECONSTRUCTED_TEST_FEATURES_DIR="${TEST_OUTPUT_DIR}/reconstructed_features"
RECONSTRUCTED_TEST_CHAIN_LIST="${RECONSTRUCTED_TEST_FEATURES_DIR}/reconstructed_chain_list.txt"
SEQPREDNN_TRAINED_MODEL="/home/25543350/SeqPredNN/pretrained_model/pretrained_parameters.pth"
RECONSTRUCTED_SEQPREDNN_OUTPUT_DIR="/home/25543350/autoencoder1/models/${timestamp}/reconstructed_seqprednn_results"
ORIGINAL_SEQPREDNN_OUTPUT_DIR="/home/25543350/autoencoder1/models/${timestamp}/original_seqprednn_results"

epochs=50
batch_size=64
learning_rate=0.001
layers="148,132,116"
latent_dim=84
dropout=0.01
negative_slope=0.01
balanced_sampling_flag="--balanced_sampling"
seed_flag="--seed 42"
save_val_features_flag="--save_val_features"
train_val_split=0.8

inference_batch_size=64
save_latent_space_vectors="--save_latent_space_vectors"
plot_feature_space="--plot_feature_space"

mkdir -p "$LOG_DIR" "$TRAINING_OUTPUT_DIR" "$TEST_OUTPUT_DIR"
exec > "${LOG_DIR}/training.log" 2>&1

trap '{
    end_time=$(date)
    echo -e "\n============================================================\n"
    echo "Training Completed"
    echo "Results:"
    echo "  Training Output Directory: ${TRAINING_OUTPUT_DIR}"
    echo "  Inference Output Directory: ${TEST_OUTPUT_DIR}"
    echo "  SeqPredNN Inference (Original Features): ${ORIGINAL_SEQPREDNN_OUTPUT_DIR}"
    echo "  SeqPredNN Inference (Recontructed Features): ${RECONSTRUCTED_SEQPREDNN_OUTPUT_DIR}"
    echo "  Process started at: $start_time"
    echo "  Process ended at: $end_time"

    {
        echo -e "\n==================== Job Record ==========================="
        echo "Job Type: Autoencoder Training and Inference"
        echo "Job ID: ${PBS_JOBID}"
        echo "Job Name: ${PBS_JOBNAME}"
        echo "Node(s): $(cat ${PBS_NODEFILE})"
        echo "Queue: ${PBS_QUEUE}"
        echo "Submitted by: ${PBS_O_LOGNAME}"
        echo "Training Output Directory: ${TRAINING_OUTPUT_DIR}"
        echo "Inference Output Directory: ${TEST_OUTPUT_DIR}"
	echo "SeqPredNN Inference (Original Features): ${ORIGINAL_SEQPREDNN_OUTPUT_DIR}"
        echo "SeqPredNN Inference (Recontructed Features): ${RECONSTRUCTED_SEQPREDNN_OUTPUT_DIR}"
        echo "Process started at: $start_time"
        echo "Process ended at: $end_time"
        echo "============================================================"
    } >> "$CENTRAL_LOG"
}' EXIT

echo -e "============================================================\n"
echo "Autoencoder Training Job"
echo "Job ID: ${PBS_JOBID}"
echo "Job Name: ${PBS_JOBNAME}"
echo "Node(s): $(cat ${PBS_NODEFILE})"
echo "Queue: ${PBS_QUEUE}"
echo "Submitted by: ${PBS_O_LOGNAME}"
echo "Training Output Directory: ${TRAINING_OUTPUT_DIR}"
echo "Feature Directory: ${FEATURES_DIR}"
echo -e "\n============================================================\n"
echo -e "Starting model training using train_model.py\n"

cd /home/25543350/autoencoder1/autoencoder/
source /home/25543350/anaconda3/bin/activate autoencoder

python train_model.py "${FEATURES_DIR}" "${CHAIN_LIST}" "${TEST_CHAIN_LIST}" -o ${TRAINING_OUTPUT_DIR} \
    --epochs ${epochs} \
    --batch_size ${batch_size} \
    --learning_rate ${learning_rate} \
    --layers ${layers} \
    --latent_dim ${latent_dim} \
    --dropout ${dropout} \
    --negative_slope ${negative_slope} \
    --train_val_split ${train_val_split} \
    ${balanced_sampling_flag} \
    ${seed_flag} \
    ${save_val_features_flag}

echo -e "============================================================\n"
echo -e "Training completed, starting test set inference using inference.py\n"

python inference.py "${FEATURES_DIR}" "${TEST_CHAIN_LIST}" "${TRAINED_MODEL}" \
    -o ${TEST_OUTPUT_DIR} \
    --batch_size ${inference_batch_size} \
    ${seed_flag} \
    ${plot_feature_space}

echo -e "============================================================\n"
echo -e "Inference completed, starting SeqPredNN inference on test set using predict.py\n"

python ${SEQPREDNN_PREDICT_PATH} "${FEATURES_DIR}" "${TEST_CHAIN_LIST}" "${SEQPREDNN_TRAINED_MODEL}" -o ${ORIGINAL_SEQPREDNN_OUTPUT_DIR}

echo -e "============================================================\n"
echo -e "Starting SeqPredNN inference on reconstructed test set using predict.py\n"

python ${SEQPREDNN_PREDICT_PATH} "${RECONSTRUCTED_TEST_FEATURES_DIR}" "${RECONSTRUCTED_TEST_CHAIN_LIST}" "${SEQPREDNN_TRAINED_MODEL}" -o ${RECONSTRUCTED_SEQPREDNN_OUTPUT_DIR}

